SELECT e.FirstName, e.LastName, e.ReportsTo, f.FirstName, f.LastName FROM employee AS e CROSS JOIN employee AS f ON e.ReportsTo = f.EmployeeId;
SELECT e.FirstName, e.LastName, f.FirstName, f.LastName FROM employee AS e CROSS JOIN employee AS f ON e.ReportsTo = f.EmployeeId;
SELECT title, score FROM movie ORDER BY score DESC LIMIT 1;

SELECT t.Name AS 'Track', a.title AS 'Album'FROM
	track AS t INNER JOIN album AS a
	ON t.AlbumId = a.AlbumId
	WHERE t.Name LIKE '%Love%';
	
SELECT e.FirstName AS 'Employee Firstname', e.LastName AS 'Employee Lastname', f.FirstName AS 'Manager Firstname', f.LastName AS 'Manager Lastname' 
FROM Employee AS e CROSS JOIN Employee AS f 
ON e.ReportsTo = f.EmployeeId 
ORDER BY e.LastName, e.Firstname;

Good Answer (22)
SELECT Movie.title AS 'Film', Actor.name AS 'Actor' FROM Movie INNER JOIN Casting 
ON Movie.id = Casting.movieid INNER JOIN Actor ON Actor.id=Casting.actorid 
WHERE Actor.name='Nicolas Cage'
ORDER BY Movie.title;

Good Answer (17)
SELECT DISTINCT mt.Name AS 'Mediatype', COUNT(t.TrackId) AS 'Number of Tracks' 
FROM MediaType AS mt INNER JOIN Track AS t
ON mt.MediaTypeId=t.MediaTypeId
ORDER BY COUNT(t.TrackId) DESC LIMIT 1;

Number 12:
SELECT DISTINCT ar.Name AS 'Artist' 
FROM Artist AS ar INNER JOIN Album AS al
ON ar.ArtistId=al.ArtistId
WHERE al.Title LIKE '%Bach%';

SELECT title AS 'Film', score AS 'Rating' FROM movie ORDER BY score DESC LIMIT 4;

SELECT Movie.title AS 'Film', Movie.score AS 'Rating' 
FROM Movie INNER JOIN Casting INNER JOIN Actor
ON Movie.id=Casting.movieid
 Actor.id=Casting.actorid
WHERE Actor.name='Sandra Bullock';
