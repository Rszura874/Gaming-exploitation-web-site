CHIP number{
	IN a, b, c, d;
	OUT A, B, C, D, E, F, G, DP;
	
	PARTS:
	//Not the inputs
	Not(in=a, out=nota);
	Not(in=b, out=notb);
	Not(in=c, out=notc);
	Not(in=d, out=notd);
	
	//Logic for A and E
	And(a=a, b=true, out=DP);
	And(a=a, b=notb, out=aandnotb);
	Or(a=c, b=notb, out=cornotb);
	And(a=cornotb, b=notd, out=E, out=e);
	Or(a=aandnotb, b=e, out=next);
	And(a=nota, b=c, out=notaandc);
	Or(a=notaandc, b=next, out-next2);
	And(a=try, b=d, out=next3); //Used in A and D
	Or(a=next2, b=next3, out=A);
	
	//Logic for C
	Or(a=aandnotb, b=notaandb, out=next4);
	Or(a=notc, b=d, out=notcord);
	Or(a=next4, b=notcord, out=C);
	
	//Logic for F
	And(a=aandnotb, b=c, out=next5);
	Or(a=notc, b=notd, out=notcornotd);
	And(a=notaandb, b=notcornotd, out=next6);
	Or(a=next5, b=next6, out=next7);
	Or(a=next7, b=notcandnotd, out=F);
	
	//Logic for B
	And(a=c, b=d, out=candd);
	Or(a=notb, b=candd, out=next8);
	And(a=nota, b=next8, out=next9);
	Or(a=b, b=notc, out=bornotc);
	And(a=a, b=bornotc, out=next10);
	Or(a=next9, b=next10, out=next11);
	Or(a=next11, b=notcnotd, out=B);
	
	
	
	
	//Used multiple times
	And(a=b, b=notc, out=try);      //A, D, G
	And(a=a, b=notb, out=aandnotb); //A, E, C
	And(a=nota, b=b, out=notaandb); //C, F
	And(a=notc, b=notd, out=notcandnotd); //B, D
}